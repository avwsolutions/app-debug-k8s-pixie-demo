# Copyright 2018- The Pixie Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0

import pxtrace
import px

# Adapted from https://github.com/iovisor/bpftrace/blob/master/tools/writeback.bt

program = """
BEGIN
{
	@reason[0] = \"background\";
	@reason[1] = \"vmscan\";
	@reason[2] = \"sync\";
	@reason[3] = \"periodic\";
	@reason[4] = \"laptop_timer\";
	@reason[5] = \"free_more_memory\";
	@reason[6] = \"fs_free_space\";
	@reason[7] = \"forker_thread\";
}


tracepoint:writeback:writeback_start
{
	@start[args->sb_dev] = nsecs;
}

tracepoint:writeback:writeback_written
{
	$sb_dev = args->sb_dev;
	$s = @start[$sb_dev];
	delete(@start[$sb_dev]);
	$lat = $s ? (nsecs - $s) / 1000 : 0;

	time("%H:%M:%S  ");
	printf(\"_device:%s _pages:%d _reason:%s _milliseconds:%d\", args->name, args->nr_pages & 0xffff,@reason[args->reason & 0xffffffff],$lat / 1000, $lat % 1000);
}

END
{
	clear(@reason);
	clear(@start);
}
"""
def write_back_func():
    table_name = 'write_back_table'
    pxtrace.UpsertTracepoint('write_back_tracer',
                             table_name,
                             program,
                             pxtrace.kprobe(),
                             "10m")
    df = px.DataFrame(table=table_name)
    
    return df